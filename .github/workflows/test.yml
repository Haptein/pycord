name: Unit Tests

on:
  push:
    paths:
      - "discord/**"
      - "test/**"
      - "requirements/**"
  pull_request:
    branches: [master]
    paths:
      - "discord/**"
      - "test/**"
      - "requirements/**"
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  pytest:
    name: "Test build with matrix"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements/dev.txt"
          check-latest: true
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements/dev.txt
      - name: Setup cache
        id: cache-pytest
        uses: actions/cache@v4
        with:
          path: .pytest_cache
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
